package require tcltest
namespace import ::tcltest::*

::tcltest::configure {*}$argv

::tcltest::testConstraint noskip 1

::tcltest::loadTestedCommands

package require automata::fsm

set m {::automata::FSM create M}

test dfa-1.0 {accept binary numbers that are multiples of 3} -body {
    ::automata::FSM create M
    M compile {
       <s0> 0 s0
        s0  1 s1
        s1  0 s2
        s1  1 s0
        s2  0 s1
        s2  1 s2
    }
    set res {}
    lappend res [M run {1}]
    lappend res [M run {0 1}]
    lappend res [M run {1 1}]
    lappend res [M run {0 0 1}]
    lappend res [M run {1 0 1}]
    lappend res [M run {0 1 1}]
    lappend res [M run {1 1 1}]
    set res
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {0 0 1 0 0 1 0}

test dfa-1.1 {find even number of ones/zeros} -setup $m -body {
M compile {
   <s1> 0 s2
    s1  1 s1
    s2  0 s1
    s2  1 s2
}
    set res {}
    lappend res [M run {1 1}]
    lappend res [M run {1 0}]
    lappend res [M run {0 1}]
    lappend res [M run {0 0}]
    lappend res [M run {1 0 0 1 1 1}]
    lappend res [M run {1 0 0 1 1 0}]
    set res
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {1 0 0 1 1 0}

test dfa-1.2 {find even number of ones/zeros: print the machine} -setup $m -body {
    M compile {
       <s1> 0 s2
        s1  1 s1
        s2  0 s1
        s2  1 s2
    }
    M print
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -output {Input symbols   A = {0, 1}
State symbols   Q = {s1, s2}
Start symbols   S = {s1}
Final symbols   F = {s1}
Transitions
q0    inp   q1    out
s1    0     s2    
s1    1     s1    
s2    0     s1    
s2    1     s2    
}

test nfa-1.0 {} -setup $m -body {
    M add table s0 0 s0
    M add table s0 1 s0
    M add table s0 1 s1
    M add table s1 0 s0
    M add table s1 1 s1
    M add S s0
    M add F s1
    set res {}
    lappend res [M run {1}]
    lappend res [M run {0}]
    lappend res [M run {1 1}]
    lappend res [M run {1 0}]
    lappend res [M run {0 1}]
    lappend res [M run {0 0}]
    set res
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {1 0 1 0 1 0}

test nfa-1.1 {find even number of ones/zeros} -setup $m -body {
    M compile {
       <s0 ε s1>
        s0 ε s3>
        s1 0 s2
        s1 1 s1
        s2 0 s1
        s2 1 s2
        s3 0 s3
        s3 1 s4
        s4 0 s4
        s4 1 s3
    }
    set res {}
    lappend res [M run {1 1}]
    lappend res [M run {1 0}]
    lappend res [M run {0 1}]
    lappend res [M run {0 0}]
    lappend res [M run {1 0 0 1 1 1}]
    lappend res [M run {1 0 0 1 1 0}]
    set res
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {1 0 0 1 1 0}

cleanupTests ; return ; # ---------------------------------
