package require tcltest
namespace import ::tcltest::*

::tcltest::configure {*}$argv

::tcltest::testConstraint noskip 1

::tcltest::loadTestedCommands

package require automata::fsm

set m {::automata::FSM create M}

test dfa-1.0 {accept binary numbers that are multiples of 3} -setup $m -body {
    M compile {
        s0 0 s0
        s0 1 s1
        s1 0 s2
        s1 1 s0
        s2 0 s1
        s2 1 s2
    }
    M S set s0
    M F set s0
    set res {}
    lappend res [M accept {1}]
    lappend res [M accept {0 1}]
    lappend res [M accept {1 1}]
    lappend res [M accept {0 0 1}]
    lappend res [M accept {1 0 1}]
    lappend res [M accept {0 1 1}]
    lappend res [M accept {1 1 1}]
    set res
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {0 0 1 0 0 1 0}

test dfa-1.1 {find even number of ones/zeros} -setup $m -body {
foreach {q0 sym q1} {
    s1 0 s2
    s1 1 s1
    s2 0 s1
    s2 1 s2
} {
    M T set $q0 $sym $q1
}
M S set s1
M F set s1
    set res {}
    lappend res [M accept {1 1}]
    lappend res [M accept {1 0}]
    lappend res [M accept {0 1}]
    lappend res [M accept {0 0}]
    lappend res [M accept {1 0 0 1 1 1}]
    lappend res [M accept {1 0 0 1 1 0}]
    set res
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {1 0 0 1 1 0}

test dfa-1.2 {find even number of ones/zeros: print the machine} -setup $m -body {
    M compile {
        s1 0 s2
        s1 1 s1
        s2 0 s1
        s2 1 s2
    }
M S set s1
M F set s1
    M print
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -output {A Input alphabet : {0, 1}
Q State symbols  : {s1, s2}
S Start symbol(s): {s1}
F Final symbol(s): {s1}
Transitions
q0  inp q1  out
s1  0   s2  
s1  1   s1  
s2  0   s1  
s2  1   s2  
}

test nfa-1.0 {} -setup $m -body {
    M T set s0 0 s0
    M T set s0 1 s0
    M T set s0 1 s1
    M T set s1 0 s0
    M T set s1 1 s1
    M S set s0
    M F set s1
    set res {}
    lappend res [M accept {1}]
    lappend res [M accept {0}]
    lappend res [M accept {1 1}]
    lappend res [M accept {1 0}]
    lappend res [M accept {0 1}]
    lappend res [M accept {0 0}]
    set res
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {1 0 1 0 1 0}

test nfa-1.1 {find even number of ones/zeros} -setup $m -body {
    M compile {
        s0 ε s1
        s0 ε s3
        s1 0 s2
        s1 1 s1
        s2 0 s1
        s2 1 s2
        s3 0 s3
        s3 1 s4
        s4 0 s4
        s4 1 s3
    }
    M S set s0
    M F set s1
    M F set s3
    set res {}
    lappend res [M accept {1 1}]
    lappend res [M accept {1 0}]
    lappend res [M accept {0 1}]
    lappend res [M accept {0 0}]
    lappend res [M accept {1 0 0 1 1 1}]
    lappend res [M accept {1 0 0 1 1 0}]
    set res
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {1 0 0 1 1 0}

cleanupTests ; return ; # ---------------------------------
