package require tcltest
namespace import ::tcltest::*

::tcltest::configure {*}$argv

::tcltest::loadTestedCommands

package require automata::sm

set mc SM
set m [subst {::automata::$mc create M}]
{*}$m
M doc [file join ~ code automata-as-tools.wiki class.$mc.md]
M destroy

test sm-1.0 {Calculate 4 x (2 + 3)} -setup {
    ::automata::SM create M
} -body {
    M compile {
        2 3 ADD 4 MUL
    }
    M run {}
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {20 6}

test sm-1.1 {print 1.0} -setup {
    ::automata::SM create M
} -body {
    M compile {
        2 3 ADD 4 MUL
    }
    M print
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -output {Flag symbols    A = {0, 1}
Instructions    Q = {1, 2, 3, 4, 5, 6}
Program start   S = 1
End points      F = {6}
Transitions
q0    inp   q1    out
1     0     2     {PUSH 2}
1     1     2     {PUSH 2}
2     0     3     {PUSH 3}
2     1     3     {PUSH 3}
3     0     4     ADD
3     1     4     ADD
4     0     5     {PUSH 4}
4     1     5     {PUSH 4}
5     0     6     MUL
5     1     6     MUL
}

test sm-2.0 {Implement a CLR operation} -setup {
    ::automata::SM create M
} -body {
    M compile {
            3
    a:      JZ:end
            DEC
            J:a
    end:    NOP
    }
    M run {}
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {0 6}

test sm-2.1 {Print 2.0} -setup {
    ::automata::SM create M
} -body {
    M compile {
            3
    a:      JZ:end
            DEC
            J:a
    end:    NOP
    }
    M print
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -output {Flag symbols    A = {0, 1}
Instructions    Q = {1, 2, 3, 4, 5, 6}
Program start   S = 1
End points      F = {6}
Transitions
q0    inp   q1    out
1     0     2     {PUSH 3}
1     1     2     {PUSH 3}
2     0     3     JZ:
2     1     5     JZ:
3     0     4     DEC
3     1     4     DEC
4     0     2     NOP
4     1     2     NOP
5     0     6     NOP
5     1     6     NOP
}

cleanupTests ; return ; # ---------------------------------
