package require tcltest
namespace import ::tcltest::*

::tcltest::configure {*}$argv

::tcltest::loadTestedCommands

package require automata::automaton

if no {
    set mc BTM
    set m [subst {::automata::$mc create M}]
    {*}$m
    M doc [file join ~ code automata-as-tools.wiki class.$mc.md]
    M destroy
}

test btm-1.0 {3 state, 2 symbol busy beaver} -setup {} -body {
    ::automata::BTM create M {
        tuples {*}{
            {A 0/P;R B}
            {A 1/P;L C}
            {B 0/P;L A}
            {B 1/P;R B}
            {C 0/P;L B}
            {C 1/P;R H}
        }
        start A
        final H
    }
    M run {0}
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {{{1 1 1 1 1 1 0} 1 H}}

test btm-1.1 {3 state, 2 symbol busy beaver print} -body {
    ::automata::BTM create M {
        tuples {*}{
            {A 0/P;R B}
            {A 1/P;L C}
            {B 0/P;L A}
            {B 1/P;R B}
            {C 0/P;L B}
            {C 1/P;R H}
        }
        start A
        final H
    }
    M print
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -output {Tape symbols      A = {0, 1}
State symbols     Q = {A, B, C, H}
Start symbol      S = A
Final symbols     F = {H}
Transitions
A × 0 → B
A × 1 → C
B × 0 → A
B × 1 → B
C × 0 → B
C × 1 → H
Tape actions
A × 0 → P R
A × 1 → P L
B × 0 → P L
B × 1 → P R
C × 0 → P L
C × 1 → P R
Instantaneous description: tape, head, state
}

test btm-1.3 {4 state, 2 symbol busy beaver} -setup {} -body {
    ::automata::BTM create M {
        tuples {*}{
            {A 0/P;R B}
            {A 1/P;L B}
            {B 0/P;L A}
            {B 1/E;L C}
            {C 0/P;R H}
            {C 1/P;L D}
            {D 0/P;R D}
            {D 1/E;R A}
        }
        start A
        final H
    }
    M run {0}
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {{{1 1 1 1 1 1 1 1 1 1 1 1 0 1 0} 12 H}}

if {[package vcompare [package present automata::automaton] 0.4] > 0} { 
    cleanupTests ; return 
} 
 

cleanupTests ; return ; # ---------------------------------
