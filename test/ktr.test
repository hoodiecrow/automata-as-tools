package require tcltest
namespace import ::tcltest::*

::tcltest::configure {*}$argv

::tcltest::loadTestedCommands

package require automata::ktr

set mc KTR
set m [subst {::automata::$mc create M}]
{*}$m
M doc [file join ~ code automata-as-tools.wiki class.$mc.md]
M destroy

test ktr-1.0 {} -setup {
    ::automata::KTR create M
} -body {
    M compile {
        a:          TEST:next-to-a-beeper
                    JUMPZ:end
                    TEST:right-is-blocked
                    JUMPZ:b
                    CALL:turnright
                    JUMP:c
        b:          TEST:front-is-clear
                    JUMPZ:c
                    turnleft
                    JUMP:b
        c:          move
                    JUMP:a
        end:        turnoff
        turnright:  turnleft turnleft turnleft RET
    }
    M run {3 3} {1 1 0 0} {3 2} {2 1 2 2}
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {{3 3} {3 2 0 3} 13 0 {3 2} {2 1 2 2}}

test ktr-1.1 {print 1.0} -setup {
    ::automata::KTR create M
} -body {
    M compile {
        a:          TEST:next-to-a-beeper
                    JUMPZ:end
                    TEST:right-is-blocked
                    JUMPZ:b
                    CALL:turnright
                    JUMP:c
        b:          TEST:front-is-clear
                    JUMPZ:c
                    turnleft
                    JUMP:b
        c:          move
                    JUMP:a
        end:        turnoff
        turnright:  turnleft turnleft turnleft RET
    }
    M print
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -output {Flag symbols    A = {0, 1}
Facing          C = {0, 1, 2, 3}
Instructions    Q = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18}
Program start   S = 1
Program end     F = {18}
Transitions
q0    inp   q1    out
1     0     2     {test 5 0}
1     1     2     {test 5 0}
2     0     3     {jt 13}
2     1     13    {jt 13}
3     0     4     {test 4 1}
3     1     4     {test 4 1}
4     0     5     {jt 7}
4     1     7     {jt 7}
5     0     14    {call 14 6}
5     1     14    {call 14 6}
6     0     7     {je 11 0 0}
6     1     11    {je 11 0 0}
7     0     8     {test 2 0}
7     1     8     {test 2 0}
8     0     9     {jt 11}
8     1     11    {jt 11}
9     0     10    turn
9     1     10    turn
10    0     11    {je 7 0 0}
10    1     7     {je 7 0 0}
11    0     12    move
11    1     12    move
12    0     13    {je 1 0 0}
12    1     1     {je 1 0 0}
13    0     14    halt
13    1     14    halt
14    0     15    turn
14    1     15    turn
15    0     16    turn
15    1     16    turn
16    0     17    turn
16    1     17    turn
17    0     18    ret
17    1     18    ret
}

cleanupTests ; return ; # ---------------------------------
