package require tcltest
namespace import ::tcltest::*

::tcltest::configure {*}$argv

::tcltest::loadTestedCommands

package require automata::codemachine

set mc CM
set m [subst {::automata::$mc create M}]
{*}$m
M doc [file join ~ code automata-as-tools.wiki class.$mc.md]
M destroy

test cm-1.0 {Implement a CPY operation} -setup {
    ::automata::CM create M
} -body {
    M compile {
        a:  JZ:b,2
            DEC:2
            INC:3
            INC:1
            J:a
        b:  JZ:z,1
            DEC:1
            INC:2
            J:b
        z:  NOP
    }
    M run {0 0 2 0 0}
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {{0 0 2 2 0} 10}

test cm-1.1 {print 1.0} -setup {
    ::automata::CM create M
} -body {
    M compile {
        a:  JZ:b,2
            DEC:2
            INC:3
            INC:1
            J:a
        b:  JZ:z,1
            DEC:1
            INC:2
            J:b
        z:  NOP
    }
    M print
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -output {Flag symbols    A = {0, 1}
Instructions    Q = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
Erase symbol    E = 0
Program start   S = 0
Program end     F = 10
Transitions
q0    inp   q1    out
0     0     1     {JZ: 2}
0     1     5     {JZ: 2}
1     0     2     {DEC: 2}
1     1     2     {DEC: 2}
2     0     3     {INC: 3}
2     1     3     {INC: 3}
3     0     4     {INC: 1}
3     1     4     {INC: 1}
4     0     0     NOP
4     1     0     NOP
5     0     6     {JZ: 1}
5     1     9     {JZ: 1}
6     0     7     {DEC: 1}
6     1     7     {DEC: 1}
7     0     8     {INC: 2}
7     1     8     {INC: 2}
8     0     5     NOP
8     1     5     NOP
9     0     10    NOP
9     1     10    NOP
Instantaneous description
register cells         registers: B*
instruction pointer    ipointer: Q
}

test cm-2.0 {Implement a DEC operation using instruction set 2} -setup {
    ::automata::CM create M -instructionset 2
} -body {
    M compile {
        _:  INC:1
        a:  JE:b,2,3
            INC:3
            JE:a,0,0
        b:  CLR:2
        c:  JE:z,1,3
            INC:1
            INC:2
            JE:c,0,0
        z:  NOP
    }
    # in a real program there would be cleanup
    M run {0 0 2 0}
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {{0 2 1 2} 10}

cleanupTests ; return ; # ---------------------------------
