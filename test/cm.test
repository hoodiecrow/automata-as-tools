package require tcltest
namespace import ::tcltest::*

::tcltest::configure {*}$argv

::tcltest::loadTestedCommands

package require automata::machine

if no {
    set mc CM
    set m [subst {::automata::$mc create M}]
    {*}$m
    M doc [file join ~ code automata-as-tools.wiki class.$mc.md]
    M destroy
}

test cm-1.0 {Implement a CPY operation} -body {
    ::automata::CM create M {
        code {
            a:  JZ:b,2
                DEC:2
                INC:3
                INC:1
                J:a
            b:  JZ:z,1
                DEC:1
                INC:2
                J:b
            z:  NOP
        }
    }
    M run {0 0 2 0 0}
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {{0 0 2 2 0} 10}

test cm-1.1 {print 1.0} -constraints PRINT -body {
    ::automata::CM create M {
        code {
            a:  JZ:b,2
                DEC:2
                INC:3
                INC:1
                J:a
            b:  JZ:z,1
                DEC:1
                INC:2
                J:b
            z:  NOP
        }
    }
    M print
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -output {Flag symbols      A = {0, 1}
Addresses         Q = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
Start address     S = 0
Final address     F = 10
Erase symbol      E = 0
Transitions
q0    inp   q1    out
0     0     1     0 N {JC 2 0}
0     1     5     0 N {JC 2 0}
1     0     2     0 N {D 2}
1     1     2     0 N {D 2}
2     0     3     0 N {I 3}
2     1     3     0 N {I 3}
3     0     4     0 N {I 1}
3     1     4     0 N {I 1}
4     0     0     0 N N
4     1     0     0 N N
5     0     6     0 N {JC 1 0}
5     1     9     0 N {JC 1 0}
6     0     7     0 N {D 1}
6     1     7     0 N {D 1}
7     0     8     0 N {I 2}
7     1     8     0 N {I 2}
8     0     5     0 N N
8     1     5     0 N N
9     0     10    0 N N
9     1     10    0 N N
Instantaneous description
register cells         registers: V*
instruction pointer    ipointer: Q
}

test cm-2.0 {Implement a DEC operation using instruction set 2} -constraints SKIP -setup {
    ::automata::CM create M -instructionset 2
} -body {
    M compile {
        _:  INC:1
        a:  JE:b,2,3
            INC:3
            JE:a,0,0
        b:  CLR:2
        c:  JE:z,1,3
            INC:1
            INC:2
            JE:c,0,0
        z:  NOP
    }
    # in a real program there would be cleanup
    M run {0 0 2 0}
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {{0 2 1 2} 10}

cleanupTests ; return ; # ---------------------------------
