package require tcltest
namespace import ::tcltest::*

::tcltest::configure {*}$argv

::tcltest::testConstraint noskip 1

::tcltest::loadTestedCommands

package require automata::machine

if no {
    set mc PTM
    set m [subst {::automata::$mc create M}]
    {*}$m
    M doc [file join ~ code automata-as-tools.wiki class.$mc.md]
    M destroy
}

test ptm-1.0 {2 state, 2 symbol busy beaver} -body {
    ::automata::PTM create M {
        code {
            A:	JNZ:+4,0
                PRINT
                HEAD:R
                J:B
                PRINT
                HEAD:L
                J:B
            B:	JNZ:+4,0
                PRINT
                HEAD:L
                J:A
                PRINT
                NOP
                J:H
            H:	HALT
        }
    }
    M run {0}
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {{1 1 1 1} 1 14}

test ptm-1.1 {2 state, 2 symbol busy beaver, print} -constraints PRINT -body {
    ::automata::PTM create M {
        code {
            A:	JNZ:+4,0
                PRINT
                HEAD:R
                J:B
                PRINT
                HEAD:L
                J:B
            B:	JNZ:+4,0
                PRINT
                HEAD:L
                J:A
                PRINT
                NOP
                J:H
            H:	HALT
        }
    }
    M print
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -output {Tape symbols      A = {0, 1}
Addresses         Q = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
Start address     S = 0
Final address     F = 15
Transitions
q0    inp   q1    out
0     0     1     0 N {JC 0 0}
0     1     4     0 N {JC 0 0}
1     0     2     2 N {}
1     1     2     2 N {}
2     0     3     0 R {}
2     1     3     0 R {}
3     0     7     0 N N
3     1     7     0 N N
4     0     5     2 N {}
4     1     5     2 N {}
5     0     6     0 L {}
5     1     6     0 L {}
6     0     7     0 N N
6     1     7     0 N N
7     0     8     0 N {JC 0 0}
7     1     11    0 N {JC 0 0}
8     0     9     2 N {}
8     1     9     2 N {}
9     0     10    0 L {}
9     1     10    0 L {}
10    0     0     0 N N
10    1     0     0 N N
11    0     12    2 N {}
11    1     12    2 N {}
12    0     13    0 N N
12    1     13    0 N N
13    0     14    0 N N
13    1     14    0 N N
14    0     15    0 N H
14    1     15    0 N H
Instantaneous description
tape contents          tape: A*
current index          head: V
instruction pointer    ipointer: Q
}

test ptm-1.2 {multiply two numbers in unary} -body {
    ::automata::PTM create M {
        code {
            begin:      HEAD:R J1:-1,0 HEAD:R J1:-1,0 HEAD:R PRINT
                        HEAD:L
            a_loop:     HEAD:L J1:-1,0 HEAD:L J1:-1,0 HEAD:R
                        ERASE
                        HEAD:R J0:done,0
                        HEAD:R J1:-1,0 HEAD:R
            b_loop:     HEAD:R
                        J0:a_loop,0
                        ERASE
                        HEAD:R J1:-1,0 HEAD:R J1:-1,0
                        PRINT
                        HEAD:L J1:-1,0 HEAD:L J1:-1,0 PRINT
                        J1:b_loop,0
                        HEAD:R
                        J0:a_loop,0
                        ERASE
            done:       HALT
        }
    }
    M run {0 1 1 1 1 0 1 1 1 1 1 0 0}
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {{0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0} 5 35}

if {[package vcompare [package present automata::machine] 0.4] > 0} { 
    cleanupTests ; return 
} 
 

cleanupTests ; return ; # ---------------------------------
