package require tcltest
namespace import ::tcltest::*

::tcltest::configure {*}$argv

::tcltest::testConstraint noskip 1

::tcltest::loadTestedCommands

package require automata::ptm

set mc PTM
set m [subst {::automata::$mc create M}]
{*}$m
M doc [file join ~ code automata-as-tools.wiki class.$mc.md]
M destroy

test ptm-1.0 {2 state, 2 symbol busy beaver} -setup {} -body {
    ::automata::PTM create M
    M compile {
        A:	JT:+4
            PRINT
            ROLL:R
            J:B
            PRINT
            ROLL:L
            J:B
        B:	JT:+4
            PRINT
            ROLL:L
            J:A
            PRINT
            NOP
            J:H
        H:	HALT
    }
    M run {0}
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {{{1 1 1 1} 1 15}}

test ptm-1.1 {2 state, 2 symbol busy beaver, print} -setup {} -body {
    ::automata::PTM create M
    M compile {
        A:	JT:+4
            PRINT
            ROLL:R
            J:B
            PRINT
            ROLL:L
            J:B
        B:	JT:+4
            PRINT
            ROLL:L
            J:A
            PRINT
            NOP
            J:H
        H:	HALT
    }
    M print
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -output {Tape symbols    A = {0, 1}
Instructions    Q = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}
Program start   S = 1
Program end     F = {16}
Transitions
q0    inp   q1    out
1     0     2     NOP
1     1     5     NOP
2     0     3     {PRINT: 1}
2     1     3     {PRINT: 1}
3     0     4     {ROLL: R}
3     1     4     {ROLL: R}
4     0     8     NOP
4     1     8     NOP
5     0     6     {PRINT: 1}
5     1     6     {PRINT: 1}
6     0     7     {ROLL: L}
6     1     7     {ROLL: L}
7     0     8     NOP
7     1     8     NOP
8     0     9     NOP
8     1     12    NOP
9     0     10    {PRINT: 1}
9     1     10    {PRINT: 1}
10    0     11    {ROLL: L}
10    1     11    {ROLL: L}
11    0     1     NOP
11    1     1     NOP
12    0     13    {PRINT: 1}
12    1     13    {PRINT: 1}
13    0     14    NOP
13    1     14    NOP
14    0     15    NOP
14    1     15    NOP
15    0     16    HALT
15    1     16    HALT
}

test ptm-1.2 {multiply two numbers in unary} -setup {} -body {
    ::automata::PTM create M
    M compile {
        begin:   ROLL:R JT:-1 ROLL:R JT:-1 ROLL:R PRINT
                 ROLL:L
        a_loop:  ROLL:L JT:-1 ROLL:L JT:-1 ROLL:R
                 ERASE
                 ROLL:R JNT:done
                 ROLL:R JT:-1 ROLL:R
        b_loop:  ROLL:R
                 JNT:a_loop
                 ERASE
                 ROLL:R JT:-1 ROLL:R JT:-1
                 PRINT
                 ROLL:L JT:-1 ROLL:L JT:-1 PRINT
                 JT:b_loop
                 ROLL:R
                 JNT:a_loop
                 ERASE
        done:    HALT
    }
    M run {0 1 1 1 1 0 1 1 1 1 1 0 0} 0
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {{{0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0} 5 36}}

cleanupTests ; return ; # ---------------------------------
