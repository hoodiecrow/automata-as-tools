package require tcltest
namespace import ::tcltest::*

::tcltest::configure {*}$argv

::tcltest::testConstraint noskip 1

::tcltest::loadTestedCommands

package require automata::codemachine

set mc PTM
set m [subst {::automata::$mc create M}]
{*}$m
M doc [file join ~ code automata-as-tools.wiki class.$mc.md]
M destroy

test ptm-1.0 {2 state, 2 symbol busy beaver} -setup {} -body {
    ::automata::PTM create M
    M compile {
        A:	JZ:+4,0
            PRINT
            ROLL:R
            J:B
            PRINT
            ROLL:L
            J:B
        B:	JZ:+4,0
            PRINT
            ROLL:L
            J:A
            PRINT
            NOP
            J:H
        H:	HALT
    }
    M run {0}
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {{{1 1 1 1} 1 14}}

test ptm-1.1 {2 state, 2 symbol busy beaver, print} -setup {} -body {
    ::automata::PTM create M
    M compile {
        A:	JZ:+4,0
            PRINT
            ROLL:R
            J:B
            PRINT
            ROLL:L
            J:B
        B:	JZ:+4,0
            PRINT
            ROLL:L
            J:A
            PRINT
            NOP
            J:H
        H:	HALT
    }
    M print
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -output {Tape symbols    A = {0, 1}
Addresses       Q = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
Start address   S = 0
Final address   F = 15
Transitions
q0    inp   q1    out
0     0     1     {JC: 0 0}
0     1     4     {JC: 0 0}
1     0     2     {PRINT: 1}
1     1     2     {PRINT: 1}
2     0     3     {ROLL: R}
2     1     3     {ROLL: R}
3     0     7     NOP
3     1     7     NOP
4     0     5     {PRINT: 1}
4     1     5     {PRINT: 1}
5     0     6     {ROLL: L}
5     1     6     {ROLL: L}
6     0     7     NOP
6     1     7     NOP
7     0     8     {JC: 0 0}
7     1     11    {JC: 0 0}
8     0     9     {PRINT: 1}
8     1     9     {PRINT: 1}
9     0     10    {ROLL: L}
9     1     10    {ROLL: L}
10    0     0     NOP
10    1     0     NOP
11    0     12    {PRINT: 1}
11    1     12    {PRINT: 1}
12    0     13    NOP
12    1     13    NOP
13    0     14    NOP
13    1     14    NOP
14    0     15    HALT
14    1     15    HALT
Instantaneous description
tape contents          tape: A*
current index          head: V
instruction pointer    ipointer: Q
}

test ptm-1.2 {multiply two numbers in unary} -setup {} -body {
    ::automata::PTM create M
    M compile {
        begin:   ROLL:R JZ:-1,0 ROLL:R JZ:-1,0 ROLL:R PRINT
                 ROLL:L
        a_loop:  ROLL:L JZ:-1,0 ROLL:L JZ:-1,0 ROLL:R
                 ERASE
                 ROLL:R JNZ:done,0
                 ROLL:R JZ:-1,0 ROLL:R
        b_loop:  ROLL:R
                 JNZ:a_loop,0
                 ERASE
                 ROLL:R JZ:-1,0 ROLL:R JZ:-1,0
                 PRINT
                 ROLL:L JZ:-1,0 ROLL:L JZ:-1,0 PRINT
                 JZ:b_loop,0
                 ROLL:R
                 JNZ:a_loop,0
                 ERASE
        done:    HALT
    }
    M run {0 1 1 1 1 0 1 1 1 1 1 0 0}
} -cleanup {
    M destroy
    log::lvSuppressLE i 1
} -result {{{0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0} 5 35}}

cleanupTests ; return ; # ---------------------------------
